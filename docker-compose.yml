services:
  postgresql:
    image: postgres:latest
    container_name: postgres_container
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234567
      POSTGRES_DB: car_booking
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -D car_booking"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    container_name: mongo_container
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    restart: unless-stopped

  vault:
    image: hashicorp/vault:latest
    container_name: vault_container
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "my-root-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
    cap_add:
      - IPC_LOCK

  vault-setup:
    image: hashicorp/vault:latest
    container_name: vault_setup_container
    depends_on:
      vault:
        condition: service_started
    volumes:
      - ./vault-config:/vault-config
    entrypoint: /bin/sh -c "/vault-config/setup-vault.sh"

  car-booking:
    build: .
    container_name: car_booking_container
    depends_on:
      postgresql:
        condition: service_started
      mongodb:
        condition: service_started
      vault-setup:
        condition: service_completed_successfully
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/car_booking
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234567
      SPRING_DATA_MONGODB_URI: mongodb://mongodb:27017/car_features
      SPRING_CLOUD_VAULT_URI: http://vault:8200
      SPRING_CLOUD_VAULT_TOKEN: my-root-token
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_REDIS_HOST: redis
    restart: unless-stopped

volumes:
  pgdata:
  mongodata: